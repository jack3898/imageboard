/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UploadIndexImport } from './routes/upload/index'
import { Route as ExploreIndexImport } from './routes/explore/index'
import { Route as AccountIndexImport } from './routes/account/index'
import { Route as ExploreSingleImport } from './routes/explore/single'
import { Route as AccountSignupImport } from './routes/account/signup'
import { Route as AccountLoginImport } from './routes/account/login'

// Create Virtual Routes

const UploadLazyImport = createFileRoute('/upload')()
const ExploreLazyImport = createFileRoute('/explore')()
const AccountLazyImport = createFileRoute('/account')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const UploadLazyRoute = UploadLazyImport.update({
  path: '/upload',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/upload.lazy').then((d) => d.Route))

const ExploreLazyRoute = ExploreLazyImport.update({
  path: '/explore',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/explore.lazy').then((d) => d.Route))

const AccountLazyRoute = AccountLazyImport.update({
  path: '/account',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/account.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const UploadIndexRoute = UploadIndexImport.update({
  path: '/',
  getParentRoute: () => UploadLazyRoute,
} as any)

const ExploreIndexRoute = ExploreIndexImport.update({
  path: '/',
  getParentRoute: () => ExploreLazyRoute,
} as any)

const AccountIndexRoute = AccountIndexImport.update({
  path: '/',
  getParentRoute: () => AccountLazyRoute,
} as any)

const ExploreSingleRoute = ExploreSingleImport.update({
  path: '/single',
  getParentRoute: () => ExploreLazyRoute,
} as any)

const AccountSignupRoute = AccountSignupImport.update({
  path: '/signup',
  getParentRoute: () => AccountLazyRoute,
} as any)

const AccountLoginRoute = AccountLoginImport.update({
  path: '/login',
  getParentRoute: () => AccountLazyRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountLazyImport
      parentRoute: typeof rootRoute
    }
    '/explore': {
      id: '/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof ExploreLazyImport
      parentRoute: typeof rootRoute
    }
    '/upload': {
      id: '/upload'
      path: '/upload'
      fullPath: '/upload'
      preLoaderRoute: typeof UploadLazyImport
      parentRoute: typeof rootRoute
    }
    '/account/login': {
      id: '/account/login'
      path: '/login'
      fullPath: '/account/login'
      preLoaderRoute: typeof AccountLoginImport
      parentRoute: typeof AccountLazyImport
    }
    '/account/signup': {
      id: '/account/signup'
      path: '/signup'
      fullPath: '/account/signup'
      preLoaderRoute: typeof AccountSignupImport
      parentRoute: typeof AccountLazyImport
    }
    '/explore/single': {
      id: '/explore/single'
      path: '/single'
      fullPath: '/explore/single'
      preLoaderRoute: typeof ExploreSingleImport
      parentRoute: typeof ExploreLazyImport
    }
    '/account/': {
      id: '/account/'
      path: '/'
      fullPath: '/account/'
      preLoaderRoute: typeof AccountIndexImport
      parentRoute: typeof AccountLazyImport
    }
    '/explore/': {
      id: '/explore/'
      path: '/'
      fullPath: '/explore/'
      preLoaderRoute: typeof ExploreIndexImport
      parentRoute: typeof ExploreLazyImport
    }
    '/upload/': {
      id: '/upload/'
      path: '/'
      fullPath: '/upload/'
      preLoaderRoute: typeof UploadIndexImport
      parentRoute: typeof UploadLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AccountLazyRoute: AccountLazyRoute.addChildren({
    AccountLoginRoute,
    AccountSignupRoute,
    AccountIndexRoute,
  }),
  ExploreLazyRoute: ExploreLazyRoute.addChildren({
    ExploreSingleRoute,
    ExploreIndexRoute,
  }),
  UploadLazyRoute: UploadLazyRoute.addChildren({ UploadIndexRoute }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/account",
        "/explore",
        "/upload"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/account": {
      "filePath": "account.lazy.tsx",
      "children": [
        "/account/login",
        "/account/signup",
        "/account/"
      ]
    },
    "/explore": {
      "filePath": "explore.lazy.tsx",
      "children": [
        "/explore/single",
        "/explore/"
      ]
    },
    "/upload": {
      "filePath": "upload.lazy.tsx",
      "children": [
        "/upload/"
      ]
    },
    "/account/login": {
      "filePath": "account/login.tsx",
      "parent": "/account"
    },
    "/account/signup": {
      "filePath": "account/signup.tsx",
      "parent": "/account"
    },
    "/explore/single": {
      "filePath": "explore/single.tsx",
      "parent": "/explore"
    },
    "/account/": {
      "filePath": "account/index.tsx",
      "parent": "/account"
    },
    "/explore/": {
      "filePath": "explore/index.tsx",
      "parent": "/explore"
    },
    "/upload/": {
      "filePath": "upload/index.tsx",
      "parent": "/upload"
    }
  }
}
ROUTE_MANIFEST_END */
