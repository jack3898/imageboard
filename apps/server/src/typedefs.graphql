scalar Date

type Post {
  id: ID!
  createdAt: Date!
  updatedAt: Date!
  title: String!
  description: String!
  authorId: ID!
  file: File
  author: User
}

type FileVariant {
  id: ID!
  createdAt: Date!
  updatedAt: Date!
  width: Int!
  height: Int!
  path: String!
  quality: Quality!
  fileId: ID!
}

type File {
  id: ID!
  createdAt: Date!
  updatedAt: Date!
  type: FileType!
  alt: String!
  variants: [FileVariant!]
}

enum FileType {
  jpeg
  png
}

enum Quality {
  RAW
  THUMBNAIL
  OPTIMIZED
}

interface User {
  id: ID!
  username: String!
  createdAt: Date!
  updatedAt: Date!
}

type PublicUser implements User {
  id: ID!
  username: String!
  createdAt: Date!
  updatedAt: Date!
}

type LoggedInUser implements User {
  id: ID!
  username: String!
  email: String!
  createdAt: Date!
  updatedAt: Date!
}

type Query {
  posts(filter: String): [Post!]!
  post(id: ID!): Post
  loggedInUser: LoggedInUser
  publicUser(id: ID!): PublicUser
}
