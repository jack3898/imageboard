scalar Date

interface File {
  id: ID!
  title: String!
  description: String!
  tags: [String!]!
  user: String!
  resolveUser: PublicUser
  createdAt: Date!
  updatedAt: Date!
  kind: String!
}

type AbstractFile implements File {
  id: ID!
  title: String!
  description: String!
  tags: [String!]!
  user: String!
  resolveUser: PublicUser
  createdAt: Date!
  updatedAt: Date!
  kind: String!
}

type ImageFile implements File {
  id: ID!
  title: String!
  description: String!
  alt: String!
  tags: [String!]!
  user: String!
  resolveUser: PublicUser
  imageVariants: [Image!]!
  kind: String!
  createdAt: Date!
  updatedAt: Date!
}

type Image {
  id: ID!
  type: String!
  quality: String!
  path: String!
  width: Int!
  height: Int!
}

interface User {
  id: ID!
  username: String!
  createdAt: Date!
  updatedAt: Date!
}

type PublicUser implements User {
  id: ID!
  username: String!
  createdAt: Date!
  updatedAt: Date!
}

type LoggedInUser implements User {
  id: ID!
  username: String!
  email: String!
  createdAt: Date!
  updatedAt: Date!
}

type Query {
  files: [File!]!
  file(id: ID!): File
  loggedInUser: LoggedInUser
  publicUser(id: ID!): PublicUser
}
